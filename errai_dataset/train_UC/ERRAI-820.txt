Presence of 2 or more ClientExceptionMappers can cause NullPointerException
This error occurs during compilation
{code}
[ERROR] Caused by: java.lang.NullPointerException
[ERROR]         at org.jboss.errai.enterprise.rebind.JaxrsProxyLoaderGenerator.getClientExceptionMappers(JaxrsProxyLoaderGenerator.java:142)
[ERROR]         at org.jboss.errai.enterprise.rebind.JaxrsProxyLoaderGenerator.generate(JaxrsProxyLoaderGenerator.java:75)
[ERROR]         at org.jboss.errai.config.rebind.AbstractAsyncGenerator$1.call(AbstractAsyncGenerator.java:67)
[ERROR]         at org.jboss.errai.config.rebind.AbstractAsyncGenerator$1.call(AbstractAsyncGenerator.java:55)
[ERROR]         at java.util.concurrent.FutureTask.run(FutureTask.java:262)
[ERROR]         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
[ERROR]         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
[ERROR]         at java.lang.Thread.run(Thread.java:745)
[INFO]    [ERROR] An internal compiler exception occurred
{code}

Exceptiion mapper code is as follows
{code}
package com.myproject.dataupdate.client.local.exception;

import javax.ws.rs.ext.Provider;

import org.jboss.errai.enterprise.client.jaxrs.ClientExceptionMapper;

import com.google.gwt.http.client.Response;
import com.myproject.dataupdate.client.shared.exception.ApplicationException;

/**
 * An exception mapper for all exceptions to be consumed on the client side.
 */
@Provider
public class ApplicationExceptionMapper implements ClientExceptionMapper {
    // -----------------------------------------------------------------------------
    // Constructors and life-cycle methods
    // -----------------------------------------------------------------------------
    public ApplicationExceptionMapper() {
        super();
    }
    
    // -----------------------------------------------------------------------------
    // Implementation of Interface ClientExceptionMapper
    // -----------------------------------------------------------------------------
    /**
     * @see org.jboss.errai.enterprise.client.jaxrs.ClientExceptionMapper#fromResponse(com.google.gwt.http.client.Response)
     */
    @Override
    public Throwable fromResponse(final Response response) {
//        if (response.getStatusCode() == 404) {
//            return new ApplicationNotFoundException();
//            
//        } else if (response.getStatusCode() == 500) {
//            return new ApplicationException("Mapped exception");
//        }
        
        return new SimpleApplicationException("Unknown exception with status code = " + response.getStatusCode());
    }
}
{code}

When this exception mapping class is removed the compiler completes successfully.

See comments for further detailed information.