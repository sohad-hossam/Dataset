MarshallerGeneratorFactory optimization
MarshallerFactoryImpl code generated by MarshallerGeneratorFactory is inefficient, because it uses if-then-else in loadMarshaller() method. When replaced by switch, resulting js code size went down from 20kb to 13kb in my current project. After my changes new code for loadMarshaller() looks like this (I will open pull request soon):

{code:java}
  private boolean putMarshaller(String fqcn, Marshaller m) {
    marshallers.put(fqcn, m);
    return true;
  }

  private boolean loadMarshaller0(String a0) {
    switch (a0) {
      case "java.lang.Throwable": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_Throwable.class));
      case "java.lang.ArithmeticException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_ArithmeticException.class));
      case "java.io.IOException": return putMarshaller(a0, GWT.create(Marshaller_for_java_io_IOException.class));
      case "java.lang.IllegalArgumentException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_IllegalArgumentException.class));
      case "java.util.EmptyStackException": return putMarshaller(a0, GWT.create(Marshaller_for_java_util_EmptyStackException.class));
      case "java.lang.ArrayStoreException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_ArrayStoreException.class));
      case "java.lang.ClassCastException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_ClassCastException.class));
      case "java.util.ConcurrentModificationException": return putMarshaller(a0, GWT.create(Marshaller_for_java_util_ConcurrentModificationException.class));
      case "java.lang.IndexOutOfBoundsException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_IndexOutOfBoundsException.class));
      case "java.lang.NegativeArraySizeException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_NegativeArraySizeException.class));
      case "java.lang.NullPointerException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_NullPointerException.class));
      case "java.lang.StringIndexOutOfBoundsException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_StringIndexOutOfBoundsException.class));
      case "java.lang.UnsupportedOperationException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_UnsupportedOperationException.class));
      case "java.lang.AssertionError": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_AssertionError.class));
      case "java.lang.RuntimeException": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_RuntimeException.class));
      case "java.lang.StackTraceElement": return putMarshaller(a0, GWT.create(Marshaller_for_java_lang_StackTraceElement.class));
      case "org.jboss.errai.demo.busstress.client.shared.RecursiveObject": return putMarshaller(a0, GWT.create(Marshaller_for_org_jboss_errai_demo_busstress_client_shared_RecursiveObject.class));
      case "org.jboss.errai.common.client.PageRequest": return putMarshaller(a0, GWT.create(Marshaller_for_org_jboss_errai_common_client_PageRequest.class));
      default: return false;
    }
  }
{code}
