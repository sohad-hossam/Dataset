Errai UI should allow @EventHandler methods to be non-public
I created a default-access (package private) event handler method, and got this error at rebind time:

0:01:17.148 [ERROR] Failed to create an instance of 'org.jboss.errai.ioc.client.Bootstrapper' via deferred binding
java.lang.Error: Unresolved compilation problem:  	The method onSaveButtonClicked(ClickEvent) from the type StoreForm is not visible  	at org.jboss.errai.ioc.client.BootstrapperImpl.<init>(BootstrapperImpl.java:530) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:513) 	at com.google.gwt.dev.shell.ModuleSpace.rebindAndCreate(ModuleSpace.java:465) 	at com.google.gwt.dev.shell.GWTBridgeImpl.create(GWTBridgeImpl.java:49) 	at com.google.gwt.core.client.GWT.create(GWT.java:97) 	at org.jboss.errai.ioc.client.Container.bootstrapContainer(Container.java:53) 	at org.jboss.errai.ioc.client.Container.onModuleLoad(Container.java:34) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 	at java.lang.reflect.Method.invoke(Method.java:597) 	at com.google.gwt.dev.shell.ModuleSpace.onLoad(ModuleSpace.java:396) 	at com.google.gwt.dev.shell.OophmSessionHandler.loadModule(OophmSessionHandler.java:200) 	at com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:525) 	at com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:363) 	at java.lang.Thread.run(Thread.java:680)

I think it would be better if Errai UI would generate code that uses the PrivateAccessUtil facilities so it can call event handlers on any method regardless of its visibility.