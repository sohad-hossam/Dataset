4.0 issues w/ @JsType
Using Polymer components (generated by Vaadin Polymer api generator) -- https://github.com/vaadin/gwt-api-generator/tree/JS_RC

Receive the following error when compiling:
{code}
   [ERROR] Errors in gen/org/jboss/errai/ioc/client/JsType_factory__c_c_p_n_HeroAnimationElement__quals__Universal.java
      [ERROR] Line 103: 'void JsType_factory__c_c_p_n_HeroAnimationElement__quals__Universal.JsType_factory__c_c_p_n_HeroAnimationElement__quals__UniversalProxyImpl.complete()' and 'void JsType_factory__c_c_p_n_HeroAnimationElement__quals__Universal.JsType_factory__c_c_p_n_HeroAnimationElement__quals__UniversalProxyImpl.complete(Object)' cannot both use the same JavaScript name 'complete'.
   [ERROR] Errors in gen/org/jboss/errai/ioc/client/JsType_factory__c_c_p_n_OpaqueAnimationElement__quals__Universal.java
      [ERROR] Line 84: 'void JsType_factory__c_c_p_n_OpaqueAnimationElement__quals__Universal.JsType_factory__c_c_p_n_OpaqueAnimationElement__quals__UniversalProxyImpl.complete()' and 'void JsType_factory__c_c_p_n_OpaqueAnimationElement__quals__Universal.JsType_factory__c_c_p_n_OpaqueAnimationElement__quals__UniversalProxyImpl.complete(Object)' cannot both use the same JavaScript name 'complete'.
   [ERROR] Errors in gen/org/jboss/errai/ioc/client/JsType_factory__c_c_p_p_BaseElement__quals__Universal.java
      [ERROR] Line 295: 'void JsType_factory__c_c_p_p_BaseElement__quals__Universal.JsType_factory__c_c_p_p_BaseElement__quals__UniversalProxyImpl.distributeContent()' and 'void JsType_factory__c_c_p_p_BaseElement__quals__Universal.JsType_factory__c_c_p_p_BaseElement__quals__UniversalProxyImpl.distributeContent(Object)' cannot both use the same JavaScript name 'distributeContent'.
{code}

HeroAnimationElement:
{code}

    @Override public void complete(Object config) {
      if (proxyHelper != null) {
        final HeroAnimationElement proxiedInstance = proxyHelper.getInstance(this);
        proxiedInstance.complete(config);
      } else {
        throw new RuntimeException("Cannot invoke public method on proxied interface before constructor completes.");
      }
    }

    @Override public void complete() {
      if (proxyHelper != null) {
        final HeroAnimationElement proxiedInstance = proxyHelper.getInstance(this);
        proxiedInstance.complete();
      } else {
        throw new RuntimeException("Cannot invoke public method on proxied interface before constructor completes.");
      }
    }
{code}

Two "complete" methods